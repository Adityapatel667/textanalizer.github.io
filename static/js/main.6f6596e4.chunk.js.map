{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","aria-current","href","onClick","toggleMode","type","id","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","Capitalize","msg","App","setMode","setAlert","message","setTimeout","title","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f6596e4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-dark`}>\r\n          <ul className=\"nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">TextUtils</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">About</a>\r\n            </li>\r\n            \r\n          </ul>\r\n                      <div className={`form-check form-switch text-${props.mode===\"light\"?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n            </div>\r\n        </nav>\r\n      </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const[text,setText]=useState('Enter text here');\r\n\r\n    const handleUpClick=()=>{\r\n   // console.log(\"upperase was clicked\"+text);\r\n    let newText=text.toUpperCase();\r\n\r\n    setText(newText) \r\n    props.showAlert(\"converted to uppercase\",\"success\");\r\n}\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to lowercase\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        //console.log(\"on change\");\r\n        setText(event.target.value);\r\n}\r\n    //console.log(\"hanel on change was clicked\");\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n          <h1>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n           <label htmlFor=\"myBox\" className=\"form-label\">Enter here</label>\r\n           <textarea className=\"form-control\" value={text} onChange={handleOnChange}id=\"mybox\" rows=\"8\"></textarea>\r\n          </div>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            \r\n        </div>\r\n        <div className=\"container my-3\">\r\n          <h1>Your text summery</h1>\r\n          <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n          <p>{ 0.008 * text.length }Minutes to Read</p>\r\n          <h2>preview</h2>\r\n          <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const Capitalize =(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{Capitalize(props.alert.type)}</strong>{props.alert.msg}\r\n       \r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\nfunction App() {\n  const[mode,setMode]=useState(\"light\");\n\n  const toggleMode=()=>{\n    if (mode===\"light\"){\n      setMode(\"dark\")\n      document.body.style.backgroundColor=\"black\"\n      showAlert(\"dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light Mode has been enabled\",\"success\")\n    }\n  }\n  const [alert, setAlert] = useState(null)\n  const showAlert =(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n\n    },1500);\n  }\n  return (\n    <>\n      \n    <Navbar title=\"textutils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <TextForm showAlert={showAlert}heading=\"enter the text to analyze \"/>\n    </div>\n    \n    </>\n    \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}